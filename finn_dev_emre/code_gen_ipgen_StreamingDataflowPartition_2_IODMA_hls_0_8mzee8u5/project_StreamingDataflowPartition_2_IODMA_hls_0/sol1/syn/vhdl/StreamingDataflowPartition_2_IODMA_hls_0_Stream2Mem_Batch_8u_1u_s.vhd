-- ==============================================================
-- Generated by Vitis HLS v2024.2
-- Copyright 1986-2022 Xilinx, Inc. All Rights Reserved.
-- Copyright 2022-2024 Advanced Micro Devices, Inc. All Rights Reserved.
-- ==============================================================

library IEEE;
use IEEE.std_logic_1164.all;
use IEEE.numeric_std.all;

entity StreamingDataflowPartition_2_IODMA_hls_0_Stream2Mem_Batch_8u_1u_s is
port (
    ap_clk : IN STD_LOGIC;
    ap_rst : IN STD_LOGIC;
    ap_start : IN STD_LOGIC;
    ap_done : OUT STD_LOGIC;
    ap_continue : IN STD_LOGIC;
    ap_idle : OUT STD_LOGIC;
    ap_ready : OUT STD_LOGIC;
    in0_V_TDATA : IN STD_LOGIC_VECTOR (7 downto 0);
    in0_V_TVALID : IN STD_LOGIC;
    in0_V_TREADY : OUT STD_LOGIC;
    m_axi_gmem_0_AWVALID : OUT STD_LOGIC;
    m_axi_gmem_0_AWREADY : IN STD_LOGIC;
    m_axi_gmem_0_AWADDR : OUT STD_LOGIC_VECTOR (63 downto 0);
    m_axi_gmem_0_AWID : OUT STD_LOGIC_VECTOR (0 downto 0);
    m_axi_gmem_0_AWLEN : OUT STD_LOGIC_VECTOR (31 downto 0);
    m_axi_gmem_0_AWSIZE : OUT STD_LOGIC_VECTOR (2 downto 0);
    m_axi_gmem_0_AWBURST : OUT STD_LOGIC_VECTOR (1 downto 0);
    m_axi_gmem_0_AWLOCK : OUT STD_LOGIC_VECTOR (1 downto 0);
    m_axi_gmem_0_AWCACHE : OUT STD_LOGIC_VECTOR (3 downto 0);
    m_axi_gmem_0_AWPROT : OUT STD_LOGIC_VECTOR (2 downto 0);
    m_axi_gmem_0_AWQOS : OUT STD_LOGIC_VECTOR (3 downto 0);
    m_axi_gmem_0_AWREGION : OUT STD_LOGIC_VECTOR (3 downto 0);
    m_axi_gmem_0_AWUSER : OUT STD_LOGIC_VECTOR (0 downto 0);
    m_axi_gmem_0_WVALID : OUT STD_LOGIC;
    m_axi_gmem_0_WREADY : IN STD_LOGIC;
    m_axi_gmem_0_WDATA : OUT STD_LOGIC_VECTOR (7 downto 0);
    m_axi_gmem_0_WSTRB : OUT STD_LOGIC_VECTOR (0 downto 0);
    m_axi_gmem_0_WLAST : OUT STD_LOGIC;
    m_axi_gmem_0_WID : OUT STD_LOGIC_VECTOR (0 downto 0);
    m_axi_gmem_0_WUSER : OUT STD_LOGIC_VECTOR (0 downto 0);
    m_axi_gmem_0_ARVALID : OUT STD_LOGIC;
    m_axi_gmem_0_ARREADY : IN STD_LOGIC;
    m_axi_gmem_0_ARADDR : OUT STD_LOGIC_VECTOR (63 downto 0);
    m_axi_gmem_0_ARID : OUT STD_LOGIC_VECTOR (0 downto 0);
    m_axi_gmem_0_ARLEN : OUT STD_LOGIC_VECTOR (31 downto 0);
    m_axi_gmem_0_ARSIZE : OUT STD_LOGIC_VECTOR (2 downto 0);
    m_axi_gmem_0_ARBURST : OUT STD_LOGIC_VECTOR (1 downto 0);
    m_axi_gmem_0_ARLOCK : OUT STD_LOGIC_VECTOR (1 downto 0);
    m_axi_gmem_0_ARCACHE : OUT STD_LOGIC_VECTOR (3 downto 0);
    m_axi_gmem_0_ARPROT : OUT STD_LOGIC_VECTOR (2 downto 0);
    m_axi_gmem_0_ARQOS : OUT STD_LOGIC_VECTOR (3 downto 0);
    m_axi_gmem_0_ARREGION : OUT STD_LOGIC_VECTOR (3 downto 0);
    m_axi_gmem_0_ARUSER : OUT STD_LOGIC_VECTOR (0 downto 0);
    m_axi_gmem_0_RVALID : IN STD_LOGIC;
    m_axi_gmem_0_RREADY : OUT STD_LOGIC;
    m_axi_gmem_0_RDATA : IN STD_LOGIC_VECTOR (7 downto 0);
    m_axi_gmem_0_RLAST : IN STD_LOGIC;
    m_axi_gmem_0_RID : IN STD_LOGIC_VECTOR (0 downto 0);
    m_axi_gmem_0_RFIFONUM : IN STD_LOGIC_VECTOR (10 downto 0);
    m_axi_gmem_0_RUSER : IN STD_LOGIC_VECTOR (0 downto 0);
    m_axi_gmem_0_RRESP : IN STD_LOGIC_VECTOR (1 downto 0);
    m_axi_gmem_0_BVALID : IN STD_LOGIC;
    m_axi_gmem_0_BREADY : OUT STD_LOGIC;
    m_axi_gmem_0_BRESP : IN STD_LOGIC_VECTOR (1 downto 0);
    m_axi_gmem_0_BID : IN STD_LOGIC_VECTOR (0 downto 0);
    m_axi_gmem_0_BUSER : IN STD_LOGIC_VECTOR (0 downto 0);
    out_r : IN STD_LOGIC_VECTOR (63 downto 0);
    numReps : IN STD_LOGIC_VECTOR (31 downto 0) );
end;


architecture behav of StreamingDataflowPartition_2_IODMA_hls_0_Stream2Mem_Batch_8u_1u_s is 
    constant ap_const_logic_1 : STD_LOGIC := '1';
    constant ap_const_logic_0 : STD_LOGIC := '0';
    constant ap_ST_fsm_state1 : STD_LOGIC_VECTOR (16 downto 0) := "00000000000000001";
    constant ap_ST_fsm_state2 : STD_LOGIC_VECTOR (16 downto 0) := "00000000000000010";
    constant ap_ST_fsm_state3 : STD_LOGIC_VECTOR (16 downto 0) := "00000000000000100";
    constant ap_ST_fsm_state4 : STD_LOGIC_VECTOR (16 downto 0) := "00000000000001000";
    constant ap_ST_fsm_state5 : STD_LOGIC_VECTOR (16 downto 0) := "00000000000010000";
    constant ap_ST_fsm_state6 : STD_LOGIC_VECTOR (16 downto 0) := "00000000000100000";
    constant ap_ST_fsm_state7 : STD_LOGIC_VECTOR (16 downto 0) := "00000000001000000";
    constant ap_ST_fsm_state8 : STD_LOGIC_VECTOR (16 downto 0) := "00000000010000000";
    constant ap_ST_fsm_state9 : STD_LOGIC_VECTOR (16 downto 0) := "00000000100000000";
    constant ap_ST_fsm_state10 : STD_LOGIC_VECTOR (16 downto 0) := "00000001000000000";
    constant ap_ST_fsm_state11 : STD_LOGIC_VECTOR (16 downto 0) := "00000010000000000";
    constant ap_ST_fsm_state12 : STD_LOGIC_VECTOR (16 downto 0) := "00000100000000000";
    constant ap_ST_fsm_state13 : STD_LOGIC_VECTOR (16 downto 0) := "00001000000000000";
    constant ap_ST_fsm_state14 : STD_LOGIC_VECTOR (16 downto 0) := "00010000000000000";
    constant ap_ST_fsm_state15 : STD_LOGIC_VECTOR (16 downto 0) := "00100000000000000";
    constant ap_ST_fsm_state16 : STD_LOGIC_VECTOR (16 downto 0) := "01000000000000000";
    constant ap_ST_fsm_state17 : STD_LOGIC_VECTOR (16 downto 0) := "10000000000000000";
    constant ap_const_lv32_0 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000000";
    constant ap_const_boolean_1 : BOOLEAN := true;
    constant ap_const_lv64_0 : STD_LOGIC_VECTOR (63 downto 0) := "0000000000000000000000000000000000000000000000000000000000000000";
    constant ap_const_lv1_0 : STD_LOGIC_VECTOR (0 downto 0) := "0";
    constant ap_const_lv3_0 : STD_LOGIC_VECTOR (2 downto 0) := "000";
    constant ap_const_lv2_0 : STD_LOGIC_VECTOR (1 downto 0) := "00";
    constant ap_const_lv4_0 : STD_LOGIC_VECTOR (3 downto 0) := "0000";
    constant ap_const_lv32_2 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000010";
    constant ap_const_lv32_9 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001001";
    constant ap_const_lv32_10 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000010000";
    constant ap_const_lv1_1 : STD_LOGIC_VECTOR (0 downto 0) := "1";
    constant ap_const_lv32_3 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000011";
    constant ap_const_lv32_8 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001000";
    constant ap_const_boolean_0 : BOOLEAN := false;
    constant ap_const_lv32_1 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000001";
    constant ap_const_lv32_A : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001010";
    constant ap_const_lv32_B : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001011";
    constant ap_const_lv64_1 : STD_LOGIC_VECTOR (63 downto 0) := "0000000000000000000000000000000000000000000000000000000000000001";
    constant ap_const_lv64_10 : STD_LOGIC_VECTOR (63 downto 0) := "0000000000000000000000000000000000000000000000000000000000010000";
    constant ap_const_lv8_0 : STD_LOGIC_VECTOR (7 downto 0) := "00000000";
    constant ap_const_lv11_0 : STD_LOGIC_VECTOR (10 downto 0) := "00000000000";

attribute shreg_extract : string;
    signal ap_done_reg : STD_LOGIC := '0';
    signal ap_CS_fsm : STD_LOGIC_VECTOR (16 downto 0) := "00000000000000001";
    attribute fsm_encoding : string;
    attribute fsm_encoding of ap_CS_fsm : signal is "none";
    signal ap_CS_fsm_state1 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state1 : signal is "none";
    signal in0_V_TDATA_blk_n : STD_LOGIC;
    signal ap_CS_fsm_state3 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state3 : signal is "none";
    signal gmem_blk_n_AW : STD_LOGIC;
    signal ap_CS_fsm_state10 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state10 : signal is "none";
    signal gmem_blk_n_B : STD_LOGIC;
    signal ap_CS_fsm_state17 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state17 : signal is "none";
    signal icmp_ln189_reg_203 : STD_LOGIC_VECTOR (0 downto 0);
    signal gmem_blk_n_W : STD_LOGIC;
    signal ap_CS_fsm_state4 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state4 : signal is "none";
    signal ap_CS_fsm_state9 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state9 : signal is "none";
    signal numReps_read_reg_185 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_block_state1 : BOOLEAN;
    signal out_read_reg_190 : STD_LOGIC_VECTOR (63 downto 0);
    signal empty_fu_120_p1 : STD_LOGIC_VECTOR (3 downto 0);
    signal empty_reg_195 : STD_LOGIC_VECTOR (3 downto 0);
    signal icmp_ln189_fu_141_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_CS_fsm_state2 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state2 : signal is "none";
    signal out_1_fu_150_p2 : STD_LOGIC_VECTOR (63 downto 0);
    signal out_1_reg_207 : STD_LOGIC_VECTOR (63 downto 0);
    signal in0_V_read_reg_213 : STD_LOGIC_VECTOR (7 downto 0);
    signal grp_Stream2Mem_Batch_8u_1u_Pipeline_VITIS_LOOP_153_1_fu_104_ap_start : STD_LOGIC;
    signal grp_Stream2Mem_Batch_8u_1u_Pipeline_VITIS_LOOP_153_1_fu_104_ap_done : STD_LOGIC;
    signal grp_Stream2Mem_Batch_8u_1u_Pipeline_VITIS_LOOP_153_1_fu_104_ap_idle : STD_LOGIC;
    signal grp_Stream2Mem_Batch_8u_1u_Pipeline_VITIS_LOOP_153_1_fu_104_ap_ready : STD_LOGIC;
    signal grp_Stream2Mem_Batch_8u_1u_Pipeline_VITIS_LOOP_153_1_fu_104_m_axi_gmem_0_AWVALID : STD_LOGIC;
    signal grp_Stream2Mem_Batch_8u_1u_Pipeline_VITIS_LOOP_153_1_fu_104_m_axi_gmem_0_AWADDR : STD_LOGIC_VECTOR (63 downto 0);
    signal grp_Stream2Mem_Batch_8u_1u_Pipeline_VITIS_LOOP_153_1_fu_104_m_axi_gmem_0_AWID : STD_LOGIC_VECTOR (0 downto 0);
    signal grp_Stream2Mem_Batch_8u_1u_Pipeline_VITIS_LOOP_153_1_fu_104_m_axi_gmem_0_AWLEN : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_Stream2Mem_Batch_8u_1u_Pipeline_VITIS_LOOP_153_1_fu_104_m_axi_gmem_0_AWSIZE : STD_LOGIC_VECTOR (2 downto 0);
    signal grp_Stream2Mem_Batch_8u_1u_Pipeline_VITIS_LOOP_153_1_fu_104_m_axi_gmem_0_AWBURST : STD_LOGIC_VECTOR (1 downto 0);
    signal grp_Stream2Mem_Batch_8u_1u_Pipeline_VITIS_LOOP_153_1_fu_104_m_axi_gmem_0_AWLOCK : STD_LOGIC_VECTOR (1 downto 0);
    signal grp_Stream2Mem_Batch_8u_1u_Pipeline_VITIS_LOOP_153_1_fu_104_m_axi_gmem_0_AWCACHE : STD_LOGIC_VECTOR (3 downto 0);
    signal grp_Stream2Mem_Batch_8u_1u_Pipeline_VITIS_LOOP_153_1_fu_104_m_axi_gmem_0_AWPROT : STD_LOGIC_VECTOR (2 downto 0);
    signal grp_Stream2Mem_Batch_8u_1u_Pipeline_VITIS_LOOP_153_1_fu_104_m_axi_gmem_0_AWQOS : STD_LOGIC_VECTOR (3 downto 0);
    signal grp_Stream2Mem_Batch_8u_1u_Pipeline_VITIS_LOOP_153_1_fu_104_m_axi_gmem_0_AWREGION : STD_LOGIC_VECTOR (3 downto 0);
    signal grp_Stream2Mem_Batch_8u_1u_Pipeline_VITIS_LOOP_153_1_fu_104_m_axi_gmem_0_AWUSER : STD_LOGIC_VECTOR (0 downto 0);
    signal grp_Stream2Mem_Batch_8u_1u_Pipeline_VITIS_LOOP_153_1_fu_104_m_axi_gmem_0_WVALID : STD_LOGIC;
    signal grp_Stream2Mem_Batch_8u_1u_Pipeline_VITIS_LOOP_153_1_fu_104_m_axi_gmem_0_WDATA : STD_LOGIC_VECTOR (7 downto 0);
    signal grp_Stream2Mem_Batch_8u_1u_Pipeline_VITIS_LOOP_153_1_fu_104_m_axi_gmem_0_WSTRB : STD_LOGIC_VECTOR (0 downto 0);
    signal grp_Stream2Mem_Batch_8u_1u_Pipeline_VITIS_LOOP_153_1_fu_104_m_axi_gmem_0_WLAST : STD_LOGIC;
    signal grp_Stream2Mem_Batch_8u_1u_Pipeline_VITIS_LOOP_153_1_fu_104_m_axi_gmem_0_WID : STD_LOGIC_VECTOR (0 downto 0);
    signal grp_Stream2Mem_Batch_8u_1u_Pipeline_VITIS_LOOP_153_1_fu_104_m_axi_gmem_0_WUSER : STD_LOGIC_VECTOR (0 downto 0);
    signal grp_Stream2Mem_Batch_8u_1u_Pipeline_VITIS_LOOP_153_1_fu_104_m_axi_gmem_0_ARVALID : STD_LOGIC;
    signal grp_Stream2Mem_Batch_8u_1u_Pipeline_VITIS_LOOP_153_1_fu_104_m_axi_gmem_0_ARADDR : STD_LOGIC_VECTOR (63 downto 0);
    signal grp_Stream2Mem_Batch_8u_1u_Pipeline_VITIS_LOOP_153_1_fu_104_m_axi_gmem_0_ARID : STD_LOGIC_VECTOR (0 downto 0);
    signal grp_Stream2Mem_Batch_8u_1u_Pipeline_VITIS_LOOP_153_1_fu_104_m_axi_gmem_0_ARLEN : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_Stream2Mem_Batch_8u_1u_Pipeline_VITIS_LOOP_153_1_fu_104_m_axi_gmem_0_ARSIZE : STD_LOGIC_VECTOR (2 downto 0);
    signal grp_Stream2Mem_Batch_8u_1u_Pipeline_VITIS_LOOP_153_1_fu_104_m_axi_gmem_0_ARBURST : STD_LOGIC_VECTOR (1 downto 0);
    signal grp_Stream2Mem_Batch_8u_1u_Pipeline_VITIS_LOOP_153_1_fu_104_m_axi_gmem_0_ARLOCK : STD_LOGIC_VECTOR (1 downto 0);
    signal grp_Stream2Mem_Batch_8u_1u_Pipeline_VITIS_LOOP_153_1_fu_104_m_axi_gmem_0_ARCACHE : STD_LOGIC_VECTOR (3 downto 0);
    signal grp_Stream2Mem_Batch_8u_1u_Pipeline_VITIS_LOOP_153_1_fu_104_m_axi_gmem_0_ARPROT : STD_LOGIC_VECTOR (2 downto 0);
    signal grp_Stream2Mem_Batch_8u_1u_Pipeline_VITIS_LOOP_153_1_fu_104_m_axi_gmem_0_ARQOS : STD_LOGIC_VECTOR (3 downto 0);
    signal grp_Stream2Mem_Batch_8u_1u_Pipeline_VITIS_LOOP_153_1_fu_104_m_axi_gmem_0_ARREGION : STD_LOGIC_VECTOR (3 downto 0);
    signal grp_Stream2Mem_Batch_8u_1u_Pipeline_VITIS_LOOP_153_1_fu_104_m_axi_gmem_0_ARUSER : STD_LOGIC_VECTOR (0 downto 0);
    signal grp_Stream2Mem_Batch_8u_1u_Pipeline_VITIS_LOOP_153_1_fu_104_m_axi_gmem_0_RREADY : STD_LOGIC;
    signal grp_Stream2Mem_Batch_8u_1u_Pipeline_VITIS_LOOP_153_1_fu_104_m_axi_gmem_0_BREADY : STD_LOGIC;
    signal grp_Stream2Mem_Batch_8u_1u_Pipeline_VITIS_LOOP_153_1_fu_104_in0_V_TREADY : STD_LOGIC;
    signal grp_Stream2Mem_Batch_8u_1u_Pipeline_VITIS_LOOP_153_1_fu_104_ap_start_reg : STD_LOGIC := '0';
    signal ap_CS_fsm_state11 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state11 : signal is "none";
    signal ap_CS_fsm_state12 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state12 : signal is "none";
    signal ap_block_state17 : BOOLEAN;
    signal rep_fu_58 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000000";
    signal rep_4_fu_155_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal rep_3_fu_166_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal icmp_ln187_fu_132_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal trunc_ln184_fu_137_p1 : STD_LOGIC_VECTOR (3 downto 0);
    signal zext_ln191_fu_146_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal ap_NS_fsm : STD_LOGIC_VECTOR (16 downto 0);
    signal ap_ST_fsm_state1_blk : STD_LOGIC;
    signal ap_ST_fsm_state2_blk : STD_LOGIC;
    signal ap_ST_fsm_state3_blk : STD_LOGIC;
    signal ap_ST_fsm_state4_blk : STD_LOGIC;
    signal ap_ST_fsm_state5_blk : STD_LOGIC;
    signal ap_ST_fsm_state6_blk : STD_LOGIC;
    signal ap_ST_fsm_state7_blk : STD_LOGIC;
    signal ap_ST_fsm_state8_blk : STD_LOGIC;
    signal ap_ST_fsm_state9_blk : STD_LOGIC;
    signal ap_ST_fsm_state10_blk : STD_LOGIC;
    signal ap_ST_fsm_state11_blk : STD_LOGIC;
    signal ap_ST_fsm_state12_blk : STD_LOGIC;
    signal ap_ST_fsm_state13_blk : STD_LOGIC;
    signal ap_ST_fsm_state14_blk : STD_LOGIC;
    signal ap_ST_fsm_state15_blk : STD_LOGIC;
    signal ap_ST_fsm_state16_blk : STD_LOGIC;
    signal ap_ST_fsm_state17_blk : STD_LOGIC;
    signal regslice_both_in0_V_U_apdone_blk : STD_LOGIC;
    signal in0_V_TDATA_int_regslice : STD_LOGIC_VECTOR (7 downto 0);
    signal in0_V_TVALID_int_regslice : STD_LOGIC;
    signal in0_V_TREADY_int_regslice : STD_LOGIC;
    signal regslice_both_in0_V_U_ack_in : STD_LOGIC;
    signal ap_ce_reg : STD_LOGIC;

    component StreamingDataflowPartition_2_IODMA_hls_0_Stream2Mem_Batch_8u_1u_Pipeline_VITIS_LOOP_153_1 IS
    port (
        ap_clk : IN STD_LOGIC;
        ap_rst : IN STD_LOGIC;
        ap_start : IN STD_LOGIC;
        ap_done : OUT STD_LOGIC;
        ap_idle : OUT STD_LOGIC;
        ap_ready : OUT STD_LOGIC;
        in0_V_TVALID : IN STD_LOGIC;
        m_axi_gmem_0_AWVALID : OUT STD_LOGIC;
        m_axi_gmem_0_AWREADY : IN STD_LOGIC;
        m_axi_gmem_0_AWADDR : OUT STD_LOGIC_VECTOR (63 downto 0);
        m_axi_gmem_0_AWID : OUT STD_LOGIC_VECTOR (0 downto 0);
        m_axi_gmem_0_AWLEN : OUT STD_LOGIC_VECTOR (31 downto 0);
        m_axi_gmem_0_AWSIZE : OUT STD_LOGIC_VECTOR (2 downto 0);
        m_axi_gmem_0_AWBURST : OUT STD_LOGIC_VECTOR (1 downto 0);
        m_axi_gmem_0_AWLOCK : OUT STD_LOGIC_VECTOR (1 downto 0);
        m_axi_gmem_0_AWCACHE : OUT STD_LOGIC_VECTOR (3 downto 0);
        m_axi_gmem_0_AWPROT : OUT STD_LOGIC_VECTOR (2 downto 0);
        m_axi_gmem_0_AWQOS : OUT STD_LOGIC_VECTOR (3 downto 0);
        m_axi_gmem_0_AWREGION : OUT STD_LOGIC_VECTOR (3 downto 0);
        m_axi_gmem_0_AWUSER : OUT STD_LOGIC_VECTOR (0 downto 0);
        m_axi_gmem_0_WVALID : OUT STD_LOGIC;
        m_axi_gmem_0_WREADY : IN STD_LOGIC;
        m_axi_gmem_0_WDATA : OUT STD_LOGIC_VECTOR (7 downto 0);
        m_axi_gmem_0_WSTRB : OUT STD_LOGIC_VECTOR (0 downto 0);
        m_axi_gmem_0_WLAST : OUT STD_LOGIC;
        m_axi_gmem_0_WID : OUT STD_LOGIC_VECTOR (0 downto 0);
        m_axi_gmem_0_WUSER : OUT STD_LOGIC_VECTOR (0 downto 0);
        m_axi_gmem_0_ARVALID : OUT STD_LOGIC;
        m_axi_gmem_0_ARREADY : IN STD_LOGIC;
        m_axi_gmem_0_ARADDR : OUT STD_LOGIC_VECTOR (63 downto 0);
        m_axi_gmem_0_ARID : OUT STD_LOGIC_VECTOR (0 downto 0);
        m_axi_gmem_0_ARLEN : OUT STD_LOGIC_VECTOR (31 downto 0);
        m_axi_gmem_0_ARSIZE : OUT STD_LOGIC_VECTOR (2 downto 0);
        m_axi_gmem_0_ARBURST : OUT STD_LOGIC_VECTOR (1 downto 0);
        m_axi_gmem_0_ARLOCK : OUT STD_LOGIC_VECTOR (1 downto 0);
        m_axi_gmem_0_ARCACHE : OUT STD_LOGIC_VECTOR (3 downto 0);
        m_axi_gmem_0_ARPROT : OUT STD_LOGIC_VECTOR (2 downto 0);
        m_axi_gmem_0_ARQOS : OUT STD_LOGIC_VECTOR (3 downto 0);
        m_axi_gmem_0_ARREGION : OUT STD_LOGIC_VECTOR (3 downto 0);
        m_axi_gmem_0_ARUSER : OUT STD_LOGIC_VECTOR (0 downto 0);
        m_axi_gmem_0_RVALID : IN STD_LOGIC;
        m_axi_gmem_0_RREADY : OUT STD_LOGIC;
        m_axi_gmem_0_RDATA : IN STD_LOGIC_VECTOR (7 downto 0);
        m_axi_gmem_0_RLAST : IN STD_LOGIC;
        m_axi_gmem_0_RID : IN STD_LOGIC_VECTOR (0 downto 0);
        m_axi_gmem_0_RFIFONUM : IN STD_LOGIC_VECTOR (10 downto 0);
        m_axi_gmem_0_RUSER : IN STD_LOGIC_VECTOR (0 downto 0);
        m_axi_gmem_0_RRESP : IN STD_LOGIC_VECTOR (1 downto 0);
        m_axi_gmem_0_BVALID : IN STD_LOGIC;
        m_axi_gmem_0_BREADY : OUT STD_LOGIC;
        m_axi_gmem_0_BRESP : IN STD_LOGIC_VECTOR (1 downto 0);
        m_axi_gmem_0_BID : IN STD_LOGIC_VECTOR (0 downto 0);
        m_axi_gmem_0_BUSER : IN STD_LOGIC_VECTOR (0 downto 0);
        out_1 : IN STD_LOGIC_VECTOR (63 downto 0);
        in0_V_TDATA : IN STD_LOGIC_VECTOR (7 downto 0);
        in0_V_TREADY : OUT STD_LOGIC );
    end component;


    component StreamingDataflowPartition_2_IODMA_hls_0_regslice_both IS
    generic (
        DataWidth : INTEGER );
    port (
        ap_clk : IN STD_LOGIC;
        ap_rst : IN STD_LOGIC;
        data_in : IN STD_LOGIC_VECTOR (DataWidth-1 downto 0);
        vld_in : IN STD_LOGIC;
        ack_in : OUT STD_LOGIC;
        data_out : OUT STD_LOGIC_VECTOR (DataWidth-1 downto 0);
        vld_out : OUT STD_LOGIC;
        ack_out : IN STD_LOGIC;
        apdone_blk : OUT STD_LOGIC );
    end component;



begin
    grp_Stream2Mem_Batch_8u_1u_Pipeline_VITIS_LOOP_153_1_fu_104 : component StreamingDataflowPartition_2_IODMA_hls_0_Stream2Mem_Batch_8u_1u_Pipeline_VITIS_LOOP_153_1
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst,
        ap_start => grp_Stream2Mem_Batch_8u_1u_Pipeline_VITIS_LOOP_153_1_fu_104_ap_start,
        ap_done => grp_Stream2Mem_Batch_8u_1u_Pipeline_VITIS_LOOP_153_1_fu_104_ap_done,
        ap_idle => grp_Stream2Mem_Batch_8u_1u_Pipeline_VITIS_LOOP_153_1_fu_104_ap_idle,
        ap_ready => grp_Stream2Mem_Batch_8u_1u_Pipeline_VITIS_LOOP_153_1_fu_104_ap_ready,
        in0_V_TVALID => in0_V_TVALID_int_regslice,
        m_axi_gmem_0_AWVALID => grp_Stream2Mem_Batch_8u_1u_Pipeline_VITIS_LOOP_153_1_fu_104_m_axi_gmem_0_AWVALID,
        m_axi_gmem_0_AWREADY => m_axi_gmem_0_AWREADY,
        m_axi_gmem_0_AWADDR => grp_Stream2Mem_Batch_8u_1u_Pipeline_VITIS_LOOP_153_1_fu_104_m_axi_gmem_0_AWADDR,
        m_axi_gmem_0_AWID => grp_Stream2Mem_Batch_8u_1u_Pipeline_VITIS_LOOP_153_1_fu_104_m_axi_gmem_0_AWID,
        m_axi_gmem_0_AWLEN => grp_Stream2Mem_Batch_8u_1u_Pipeline_VITIS_LOOP_153_1_fu_104_m_axi_gmem_0_AWLEN,
        m_axi_gmem_0_AWSIZE => grp_Stream2Mem_Batch_8u_1u_Pipeline_VITIS_LOOP_153_1_fu_104_m_axi_gmem_0_AWSIZE,
        m_axi_gmem_0_AWBURST => grp_Stream2Mem_Batch_8u_1u_Pipeline_VITIS_LOOP_153_1_fu_104_m_axi_gmem_0_AWBURST,
        m_axi_gmem_0_AWLOCK => grp_Stream2Mem_Batch_8u_1u_Pipeline_VITIS_LOOP_153_1_fu_104_m_axi_gmem_0_AWLOCK,
        m_axi_gmem_0_AWCACHE => grp_Stream2Mem_Batch_8u_1u_Pipeline_VITIS_LOOP_153_1_fu_104_m_axi_gmem_0_AWCACHE,
        m_axi_gmem_0_AWPROT => grp_Stream2Mem_Batch_8u_1u_Pipeline_VITIS_LOOP_153_1_fu_104_m_axi_gmem_0_AWPROT,
        m_axi_gmem_0_AWQOS => grp_Stream2Mem_Batch_8u_1u_Pipeline_VITIS_LOOP_153_1_fu_104_m_axi_gmem_0_AWQOS,
        m_axi_gmem_0_AWREGION => grp_Stream2Mem_Batch_8u_1u_Pipeline_VITIS_LOOP_153_1_fu_104_m_axi_gmem_0_AWREGION,
        m_axi_gmem_0_AWUSER => grp_Stream2Mem_Batch_8u_1u_Pipeline_VITIS_LOOP_153_1_fu_104_m_axi_gmem_0_AWUSER,
        m_axi_gmem_0_WVALID => grp_Stream2Mem_Batch_8u_1u_Pipeline_VITIS_LOOP_153_1_fu_104_m_axi_gmem_0_WVALID,
        m_axi_gmem_0_WREADY => m_axi_gmem_0_WREADY,
        m_axi_gmem_0_WDATA => grp_Stream2Mem_Batch_8u_1u_Pipeline_VITIS_LOOP_153_1_fu_104_m_axi_gmem_0_WDATA,
        m_axi_gmem_0_WSTRB => grp_Stream2Mem_Batch_8u_1u_Pipeline_VITIS_LOOP_153_1_fu_104_m_axi_gmem_0_WSTRB,
        m_axi_gmem_0_WLAST => grp_Stream2Mem_Batch_8u_1u_Pipeline_VITIS_LOOP_153_1_fu_104_m_axi_gmem_0_WLAST,
        m_axi_gmem_0_WID => grp_Stream2Mem_Batch_8u_1u_Pipeline_VITIS_LOOP_153_1_fu_104_m_axi_gmem_0_WID,
        m_axi_gmem_0_WUSER => grp_Stream2Mem_Batch_8u_1u_Pipeline_VITIS_LOOP_153_1_fu_104_m_axi_gmem_0_WUSER,
        m_axi_gmem_0_ARVALID => grp_Stream2Mem_Batch_8u_1u_Pipeline_VITIS_LOOP_153_1_fu_104_m_axi_gmem_0_ARVALID,
        m_axi_gmem_0_ARREADY => ap_const_logic_0,
        m_axi_gmem_0_ARADDR => grp_Stream2Mem_Batch_8u_1u_Pipeline_VITIS_LOOP_153_1_fu_104_m_axi_gmem_0_ARADDR,
        m_axi_gmem_0_ARID => grp_Stream2Mem_Batch_8u_1u_Pipeline_VITIS_LOOP_153_1_fu_104_m_axi_gmem_0_ARID,
        m_axi_gmem_0_ARLEN => grp_Stream2Mem_Batch_8u_1u_Pipeline_VITIS_LOOP_153_1_fu_104_m_axi_gmem_0_ARLEN,
        m_axi_gmem_0_ARSIZE => grp_Stream2Mem_Batch_8u_1u_Pipeline_VITIS_LOOP_153_1_fu_104_m_axi_gmem_0_ARSIZE,
        m_axi_gmem_0_ARBURST => grp_Stream2Mem_Batch_8u_1u_Pipeline_VITIS_LOOP_153_1_fu_104_m_axi_gmem_0_ARBURST,
        m_axi_gmem_0_ARLOCK => grp_Stream2Mem_Batch_8u_1u_Pipeline_VITIS_LOOP_153_1_fu_104_m_axi_gmem_0_ARLOCK,
        m_axi_gmem_0_ARCACHE => grp_Stream2Mem_Batch_8u_1u_Pipeline_VITIS_LOOP_153_1_fu_104_m_axi_gmem_0_ARCACHE,
        m_axi_gmem_0_ARPROT => grp_Stream2Mem_Batch_8u_1u_Pipeline_VITIS_LOOP_153_1_fu_104_m_axi_gmem_0_ARPROT,
        m_axi_gmem_0_ARQOS => grp_Stream2Mem_Batch_8u_1u_Pipeline_VITIS_LOOP_153_1_fu_104_m_axi_gmem_0_ARQOS,
        m_axi_gmem_0_ARREGION => grp_Stream2Mem_Batch_8u_1u_Pipeline_VITIS_LOOP_153_1_fu_104_m_axi_gmem_0_ARREGION,
        m_axi_gmem_0_ARUSER => grp_Stream2Mem_Batch_8u_1u_Pipeline_VITIS_LOOP_153_1_fu_104_m_axi_gmem_0_ARUSER,
        m_axi_gmem_0_RVALID => ap_const_logic_0,
        m_axi_gmem_0_RREADY => grp_Stream2Mem_Batch_8u_1u_Pipeline_VITIS_LOOP_153_1_fu_104_m_axi_gmem_0_RREADY,
        m_axi_gmem_0_RDATA => ap_const_lv8_0,
        m_axi_gmem_0_RLAST => ap_const_logic_0,
        m_axi_gmem_0_RID => ap_const_lv1_0,
        m_axi_gmem_0_RFIFONUM => ap_const_lv11_0,
        m_axi_gmem_0_RUSER => ap_const_lv1_0,
        m_axi_gmem_0_RRESP => ap_const_lv2_0,
        m_axi_gmem_0_BVALID => m_axi_gmem_0_BVALID,
        m_axi_gmem_0_BREADY => grp_Stream2Mem_Batch_8u_1u_Pipeline_VITIS_LOOP_153_1_fu_104_m_axi_gmem_0_BREADY,
        m_axi_gmem_0_BRESP => m_axi_gmem_0_BRESP,
        m_axi_gmem_0_BID => m_axi_gmem_0_BID,
        m_axi_gmem_0_BUSER => m_axi_gmem_0_BUSER,
        out_1 => out_1_reg_207,
        in0_V_TDATA => in0_V_TDATA_int_regslice,
        in0_V_TREADY => grp_Stream2Mem_Batch_8u_1u_Pipeline_VITIS_LOOP_153_1_fu_104_in0_V_TREADY);

    regslice_both_in0_V_U : component StreamingDataflowPartition_2_IODMA_hls_0_regslice_both
    generic map (
        DataWidth => 8)
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst,
        data_in => in0_V_TDATA,
        vld_in => in0_V_TVALID,
        ack_in => regslice_both_in0_V_U_ack_in,
        data_out => in0_V_TDATA_int_regslice,
        vld_out => in0_V_TVALID_int_regslice,
        ack_out => in0_V_TREADY_int_regslice,
        apdone_blk => regslice_both_in0_V_U_apdone_blk);





    ap_CS_fsm_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_CS_fsm <= ap_ST_fsm_state1;
            else
                ap_CS_fsm <= ap_NS_fsm;
            end if;
        end if;
    end process;


    ap_done_reg_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_done_reg <= ap_const_logic_0;
            else
                if ((ap_continue = ap_const_logic_1)) then 
                    ap_done_reg <= ap_const_logic_0;
                elsif (((icmp_ln187_fu_132_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state2))) then 
                    ap_done_reg <= ap_const_logic_1;
                end if; 
            end if;
        end if;
    end process;


    grp_Stream2Mem_Batch_8u_1u_Pipeline_VITIS_LOOP_153_1_fu_104_ap_start_reg_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                grp_Stream2Mem_Batch_8u_1u_Pipeline_VITIS_LOOP_153_1_fu_104_ap_start_reg <= ap_const_logic_0;
            else
                if ((ap_const_logic_1 = ap_CS_fsm_state11)) then 
                    grp_Stream2Mem_Batch_8u_1u_Pipeline_VITIS_LOOP_153_1_fu_104_ap_start_reg <= ap_const_logic_1;
                elsif ((grp_Stream2Mem_Batch_8u_1u_Pipeline_VITIS_LOOP_153_1_fu_104_ap_ready = ap_const_logic_1)) then 
                    grp_Stream2Mem_Batch_8u_1u_Pipeline_VITIS_LOOP_153_1_fu_104_ap_start_reg <= ap_const_logic_0;
                end if; 
            end if;
        end if;
    end process;


    rep_fu_58_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_CS_fsm_state1) and (ap_const_boolean_0 = ap_block_state1))) then 
                rep_fu_58 <= ap_const_lv32_0;
            elsif (((icmp_ln187_fu_132_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state2) and (icmp_ln189_fu_141_p2 = ap_const_lv1_1))) then 
                rep_fu_58 <= rep_3_fu_166_p2;
            elsif (((icmp_ln187_fu_132_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state2) and (icmp_ln189_fu_141_p2 = ap_const_lv1_0))) then 
                rep_fu_58 <= rep_4_fu_155_p2;
            end if; 
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_CS_fsm_state1) and (ap_const_boolean_0 = ap_block_state1))) then
                empty_reg_195 <= empty_fu_120_p1;
                numReps_read_reg_185 <= numReps;
                out_read_reg_190 <= out_r;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state2)) then
                icmp_ln189_reg_203 <= icmp_ln189_fu_141_p2;
                out_1_reg_207 <= out_1_fu_150_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((not(((m_axi_gmem_0_AWREADY = ap_const_logic_0) or (in0_V_TVALID_int_regslice = ap_const_logic_0))) and (ap_const_logic_1 = ap_CS_fsm_state3))) then
                in0_V_read_reg_213 <= in0_V_TDATA_int_regslice;
            end if;
        end if;
    end process;

    ap_NS_fsm_assign_proc : process (ap_CS_fsm, ap_CS_fsm_state1, m_axi_gmem_0_AWREADY, m_axi_gmem_0_WREADY, m_axi_gmem_0_BVALID, ap_CS_fsm_state3, ap_CS_fsm_state10, ap_CS_fsm_state17, ap_CS_fsm_state4, ap_CS_fsm_state9, ap_block_state1, icmp_ln189_fu_141_p2, ap_CS_fsm_state2, grp_Stream2Mem_Batch_8u_1u_Pipeline_VITIS_LOOP_153_1_fu_104_ap_done, ap_CS_fsm_state12, ap_block_state17, icmp_ln187_fu_132_p2, in0_V_TVALID_int_regslice)
    begin
        case ap_CS_fsm is
            when ap_ST_fsm_state1 => 
                if (((ap_const_logic_1 = ap_CS_fsm_state1) and (ap_const_boolean_0 = ap_block_state1))) then
                    ap_NS_fsm <= ap_ST_fsm_state2;
                else
                    ap_NS_fsm <= ap_ST_fsm_state1;
                end if;
            when ap_ST_fsm_state2 => 
                if (((icmp_ln187_fu_132_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state2))) then
                    ap_NS_fsm <= ap_ST_fsm_state1;
                elsif (((icmp_ln187_fu_132_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state2) and (icmp_ln189_fu_141_p2 = ap_const_lv1_1))) then
                    ap_NS_fsm <= ap_ST_fsm_state10;
                else
                    ap_NS_fsm <= ap_ST_fsm_state3;
                end if;
            when ap_ST_fsm_state3 => 
                if ((not(((m_axi_gmem_0_AWREADY = ap_const_logic_0) or (in0_V_TVALID_int_regslice = ap_const_logic_0))) and (ap_const_logic_1 = ap_CS_fsm_state3))) then
                    ap_NS_fsm <= ap_ST_fsm_state4;
                else
                    ap_NS_fsm <= ap_ST_fsm_state3;
                end if;
            when ap_ST_fsm_state4 => 
                if (((m_axi_gmem_0_WREADY = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state4))) then
                    ap_NS_fsm <= ap_ST_fsm_state5;
                else
                    ap_NS_fsm <= ap_ST_fsm_state4;
                end if;
            when ap_ST_fsm_state5 => 
                ap_NS_fsm <= ap_ST_fsm_state6;
            when ap_ST_fsm_state6 => 
                ap_NS_fsm <= ap_ST_fsm_state7;
            when ap_ST_fsm_state7 => 
                ap_NS_fsm <= ap_ST_fsm_state8;
            when ap_ST_fsm_state8 => 
                ap_NS_fsm <= ap_ST_fsm_state9;
            when ap_ST_fsm_state9 => 
                if (((m_axi_gmem_0_BVALID = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state9))) then
                    ap_NS_fsm <= ap_ST_fsm_state17;
                else
                    ap_NS_fsm <= ap_ST_fsm_state9;
                end if;
            when ap_ST_fsm_state10 => 
                if (((m_axi_gmem_0_AWREADY = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state10))) then
                    ap_NS_fsm <= ap_ST_fsm_state11;
                else
                    ap_NS_fsm <= ap_ST_fsm_state10;
                end if;
            when ap_ST_fsm_state11 => 
                ap_NS_fsm <= ap_ST_fsm_state12;
            when ap_ST_fsm_state12 => 
                if (((ap_const_logic_1 = ap_CS_fsm_state12) and (grp_Stream2Mem_Batch_8u_1u_Pipeline_VITIS_LOOP_153_1_fu_104_ap_done = ap_const_logic_1))) then
                    ap_NS_fsm <= ap_ST_fsm_state13;
                else
                    ap_NS_fsm <= ap_ST_fsm_state12;
                end if;
            when ap_ST_fsm_state13 => 
                ap_NS_fsm <= ap_ST_fsm_state14;
            when ap_ST_fsm_state14 => 
                ap_NS_fsm <= ap_ST_fsm_state15;
            when ap_ST_fsm_state15 => 
                ap_NS_fsm <= ap_ST_fsm_state16;
            when ap_ST_fsm_state16 => 
                ap_NS_fsm <= ap_ST_fsm_state17;
            when ap_ST_fsm_state17 => 
                if (((ap_const_logic_1 = ap_CS_fsm_state17) and (ap_const_boolean_0 = ap_block_state17))) then
                    ap_NS_fsm <= ap_ST_fsm_state2;
                else
                    ap_NS_fsm <= ap_ST_fsm_state17;
                end if;
            when others =>  
                ap_NS_fsm <= "XXXXXXXXXXXXXXXXX";
        end case;
    end process;
    ap_CS_fsm_state1 <= ap_CS_fsm(0);
    ap_CS_fsm_state10 <= ap_CS_fsm(9);
    ap_CS_fsm_state11 <= ap_CS_fsm(10);
    ap_CS_fsm_state12 <= ap_CS_fsm(11);
    ap_CS_fsm_state17 <= ap_CS_fsm(16);
    ap_CS_fsm_state2 <= ap_CS_fsm(1);
    ap_CS_fsm_state3 <= ap_CS_fsm(2);
    ap_CS_fsm_state4 <= ap_CS_fsm(3);
    ap_CS_fsm_state9 <= ap_CS_fsm(8);

    ap_ST_fsm_state10_blk_assign_proc : process(m_axi_gmem_0_AWREADY)
    begin
        if ((m_axi_gmem_0_AWREADY = ap_const_logic_0)) then 
            ap_ST_fsm_state10_blk <= ap_const_logic_1;
        else 
            ap_ST_fsm_state10_blk <= ap_const_logic_0;
        end if; 
    end process;

    ap_ST_fsm_state11_blk <= ap_const_logic_0;

    ap_ST_fsm_state12_blk_assign_proc : process(grp_Stream2Mem_Batch_8u_1u_Pipeline_VITIS_LOOP_153_1_fu_104_ap_done)
    begin
        if ((grp_Stream2Mem_Batch_8u_1u_Pipeline_VITIS_LOOP_153_1_fu_104_ap_done = ap_const_logic_0)) then 
            ap_ST_fsm_state12_blk <= ap_const_logic_1;
        else 
            ap_ST_fsm_state12_blk <= ap_const_logic_0;
        end if; 
    end process;

    ap_ST_fsm_state13_blk <= ap_const_logic_0;
    ap_ST_fsm_state14_blk <= ap_const_logic_0;
    ap_ST_fsm_state15_blk <= ap_const_logic_0;
    ap_ST_fsm_state16_blk <= ap_const_logic_0;

    ap_ST_fsm_state17_blk_assign_proc : process(ap_block_state17)
    begin
        if ((ap_const_boolean_1 = ap_block_state17)) then 
            ap_ST_fsm_state17_blk <= ap_const_logic_1;
        else 
            ap_ST_fsm_state17_blk <= ap_const_logic_0;
        end if; 
    end process;


    ap_ST_fsm_state1_blk_assign_proc : process(ap_block_state1)
    begin
        if ((ap_const_boolean_1 = ap_block_state1)) then 
            ap_ST_fsm_state1_blk <= ap_const_logic_1;
        else 
            ap_ST_fsm_state1_blk <= ap_const_logic_0;
        end if; 
    end process;

    ap_ST_fsm_state2_blk <= ap_const_logic_0;

    ap_ST_fsm_state3_blk_assign_proc : process(m_axi_gmem_0_AWREADY, in0_V_TVALID_int_regslice)
    begin
        if (((m_axi_gmem_0_AWREADY = ap_const_logic_0) or (in0_V_TVALID_int_regslice = ap_const_logic_0))) then 
            ap_ST_fsm_state3_blk <= ap_const_logic_1;
        else 
            ap_ST_fsm_state3_blk <= ap_const_logic_0;
        end if; 
    end process;


    ap_ST_fsm_state4_blk_assign_proc : process(m_axi_gmem_0_WREADY)
    begin
        if ((m_axi_gmem_0_WREADY = ap_const_logic_0)) then 
            ap_ST_fsm_state4_blk <= ap_const_logic_1;
        else 
            ap_ST_fsm_state4_blk <= ap_const_logic_0;
        end if; 
    end process;

    ap_ST_fsm_state5_blk <= ap_const_logic_0;
    ap_ST_fsm_state6_blk <= ap_const_logic_0;
    ap_ST_fsm_state7_blk <= ap_const_logic_0;
    ap_ST_fsm_state8_blk <= ap_const_logic_0;

    ap_ST_fsm_state9_blk_assign_proc : process(m_axi_gmem_0_BVALID)
    begin
        if ((m_axi_gmem_0_BVALID = ap_const_logic_0)) then 
            ap_ST_fsm_state9_blk <= ap_const_logic_1;
        else 
            ap_ST_fsm_state9_blk <= ap_const_logic_0;
        end if; 
    end process;


    ap_block_state1_assign_proc : process(ap_start, ap_done_reg)
    begin
                ap_block_state1 <= ((ap_done_reg = ap_const_logic_1) or (ap_start = ap_const_logic_0));
    end process;


    ap_block_state17_assign_proc : process(m_axi_gmem_0_BVALID, icmp_ln189_reg_203)
    begin
                ap_block_state17 <= ((m_axi_gmem_0_BVALID = ap_const_logic_0) and (icmp_ln189_reg_203 = ap_const_lv1_1));
    end process;


    ap_done_assign_proc : process(ap_done_reg, ap_CS_fsm_state2, icmp_ln187_fu_132_p2)
    begin
        if (((icmp_ln187_fu_132_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state2))) then 
            ap_done <= ap_const_logic_1;
        else 
            ap_done <= ap_done_reg;
        end if; 
    end process;


    ap_idle_assign_proc : process(ap_start, ap_CS_fsm_state1)
    begin
        if (((ap_start = ap_const_logic_0) and (ap_const_logic_1 = ap_CS_fsm_state1))) then 
            ap_idle <= ap_const_logic_1;
        else 
            ap_idle <= ap_const_logic_0;
        end if; 
    end process;


    ap_ready_assign_proc : process(ap_CS_fsm_state2, icmp_ln187_fu_132_p2)
    begin
        if (((icmp_ln187_fu_132_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state2))) then 
            ap_ready <= ap_const_logic_1;
        else 
            ap_ready <= ap_const_logic_0;
        end if; 
    end process;

    empty_fu_120_p1 <= numReps(4 - 1 downto 0);

    gmem_blk_n_AW_assign_proc : process(m_axi_gmem_0_AWREADY, ap_CS_fsm_state3, ap_CS_fsm_state10)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state10) or (ap_const_logic_1 = ap_CS_fsm_state3))) then 
            gmem_blk_n_AW <= m_axi_gmem_0_AWREADY;
        else 
            gmem_blk_n_AW <= ap_const_logic_1;
        end if; 
    end process;


    gmem_blk_n_B_assign_proc : process(m_axi_gmem_0_BVALID, ap_CS_fsm_state17, icmp_ln189_reg_203, ap_CS_fsm_state9)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state9) or ((ap_const_logic_1 = ap_CS_fsm_state17) and (icmp_ln189_reg_203 = ap_const_lv1_1)))) then 
            gmem_blk_n_B <= m_axi_gmem_0_BVALID;
        else 
            gmem_blk_n_B <= ap_const_logic_1;
        end if; 
    end process;


    gmem_blk_n_W_assign_proc : process(m_axi_gmem_0_WREADY, ap_CS_fsm_state4)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state4)) then 
            gmem_blk_n_W <= m_axi_gmem_0_WREADY;
        else 
            gmem_blk_n_W <= ap_const_logic_1;
        end if; 
    end process;

    grp_Stream2Mem_Batch_8u_1u_Pipeline_VITIS_LOOP_153_1_fu_104_ap_start <= grp_Stream2Mem_Batch_8u_1u_Pipeline_VITIS_LOOP_153_1_fu_104_ap_start_reg;
    icmp_ln187_fu_132_p2 <= "1" when (rep_fu_58 = numReps_read_reg_185) else "0";
    icmp_ln189_fu_141_p2 <= "1" when (empty_reg_195 = trunc_ln184_fu_137_p1) else "0";

    in0_V_TDATA_blk_n_assign_proc : process(ap_CS_fsm_state3, in0_V_TVALID_int_regslice)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state3)) then 
            in0_V_TDATA_blk_n <= in0_V_TVALID_int_regslice;
        else 
            in0_V_TDATA_blk_n <= ap_const_logic_1;
        end if; 
    end process;

    in0_V_TREADY <= regslice_both_in0_V_U_ack_in;

    in0_V_TREADY_int_regslice_assign_proc : process(m_axi_gmem_0_AWREADY, ap_CS_fsm_state3, grp_Stream2Mem_Batch_8u_1u_Pipeline_VITIS_LOOP_153_1_fu_104_in0_V_TREADY, ap_CS_fsm_state12, in0_V_TVALID_int_regslice)
    begin
        if ((not(((m_axi_gmem_0_AWREADY = ap_const_logic_0) or (in0_V_TVALID_int_regslice = ap_const_logic_0))) and (ap_const_logic_1 = ap_CS_fsm_state3))) then 
            in0_V_TREADY_int_regslice <= ap_const_logic_1;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state12)) then 
            in0_V_TREADY_int_regslice <= grp_Stream2Mem_Batch_8u_1u_Pipeline_VITIS_LOOP_153_1_fu_104_in0_V_TREADY;
        else 
            in0_V_TREADY_int_regslice <= ap_const_logic_0;
        end if; 
    end process;

    m_axi_gmem_0_ARADDR <= ap_const_lv64_0;
    m_axi_gmem_0_ARBURST <= ap_const_lv2_0;
    m_axi_gmem_0_ARCACHE <= ap_const_lv4_0;
    m_axi_gmem_0_ARID <= ap_const_lv1_0;
    m_axi_gmem_0_ARLEN <= ap_const_lv32_0;
    m_axi_gmem_0_ARLOCK <= ap_const_lv2_0;
    m_axi_gmem_0_ARPROT <= ap_const_lv3_0;
    m_axi_gmem_0_ARQOS <= ap_const_lv4_0;
    m_axi_gmem_0_ARREGION <= ap_const_lv4_0;
    m_axi_gmem_0_ARSIZE <= ap_const_lv3_0;
    m_axi_gmem_0_ARUSER <= ap_const_lv1_0;
    m_axi_gmem_0_ARVALID <= ap_const_logic_0;

    m_axi_gmem_0_AWADDR_assign_proc : process(m_axi_gmem_0_AWREADY, ap_CS_fsm_state3, ap_CS_fsm_state10, out_1_reg_207, grp_Stream2Mem_Batch_8u_1u_Pipeline_VITIS_LOOP_153_1_fu_104_m_axi_gmem_0_AWADDR, ap_CS_fsm_state11, ap_CS_fsm_state12, in0_V_TVALID_int_regslice)
    begin
        if (((not(((m_axi_gmem_0_AWREADY = ap_const_logic_0) or (in0_V_TVALID_int_regslice = ap_const_logic_0))) and (ap_const_logic_1 = ap_CS_fsm_state3)) or ((m_axi_gmem_0_AWREADY = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state10)))) then 
            m_axi_gmem_0_AWADDR <= out_1_reg_207;
        elsif (((ap_const_logic_1 = ap_CS_fsm_state12) or (ap_const_logic_1 = ap_CS_fsm_state11))) then 
            m_axi_gmem_0_AWADDR <= grp_Stream2Mem_Batch_8u_1u_Pipeline_VITIS_LOOP_153_1_fu_104_m_axi_gmem_0_AWADDR;
        else 
            m_axi_gmem_0_AWADDR <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end if; 
    end process;


    m_axi_gmem_0_AWBURST_assign_proc : process(grp_Stream2Mem_Batch_8u_1u_Pipeline_VITIS_LOOP_153_1_fu_104_m_axi_gmem_0_AWBURST, ap_CS_fsm_state11, ap_CS_fsm_state12)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state12) or (ap_const_logic_1 = ap_CS_fsm_state11))) then 
            m_axi_gmem_0_AWBURST <= grp_Stream2Mem_Batch_8u_1u_Pipeline_VITIS_LOOP_153_1_fu_104_m_axi_gmem_0_AWBURST;
        else 
            m_axi_gmem_0_AWBURST <= ap_const_lv2_0;
        end if; 
    end process;


    m_axi_gmem_0_AWCACHE_assign_proc : process(grp_Stream2Mem_Batch_8u_1u_Pipeline_VITIS_LOOP_153_1_fu_104_m_axi_gmem_0_AWCACHE, ap_CS_fsm_state11, ap_CS_fsm_state12)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state12) or (ap_const_logic_1 = ap_CS_fsm_state11))) then 
            m_axi_gmem_0_AWCACHE <= grp_Stream2Mem_Batch_8u_1u_Pipeline_VITIS_LOOP_153_1_fu_104_m_axi_gmem_0_AWCACHE;
        else 
            m_axi_gmem_0_AWCACHE <= ap_const_lv4_0;
        end if; 
    end process;


    m_axi_gmem_0_AWID_assign_proc : process(grp_Stream2Mem_Batch_8u_1u_Pipeline_VITIS_LOOP_153_1_fu_104_m_axi_gmem_0_AWID, ap_CS_fsm_state11, ap_CS_fsm_state12)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state12) or (ap_const_logic_1 = ap_CS_fsm_state11))) then 
            m_axi_gmem_0_AWID <= grp_Stream2Mem_Batch_8u_1u_Pipeline_VITIS_LOOP_153_1_fu_104_m_axi_gmem_0_AWID;
        else 
            m_axi_gmem_0_AWID <= ap_const_lv1_0;
        end if; 
    end process;


    m_axi_gmem_0_AWLEN_assign_proc : process(m_axi_gmem_0_AWREADY, ap_CS_fsm_state3, ap_CS_fsm_state10, grp_Stream2Mem_Batch_8u_1u_Pipeline_VITIS_LOOP_153_1_fu_104_m_axi_gmem_0_AWLEN, ap_CS_fsm_state11, ap_CS_fsm_state12, in0_V_TVALID_int_regslice)
    begin
        if (((m_axi_gmem_0_AWREADY = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state10))) then 
            m_axi_gmem_0_AWLEN <= ap_const_lv64_10(32 - 1 downto 0);
        elsif ((not(((m_axi_gmem_0_AWREADY = ap_const_logic_0) or (in0_V_TVALID_int_regslice = ap_const_logic_0))) and (ap_const_logic_1 = ap_CS_fsm_state3))) then 
            m_axi_gmem_0_AWLEN <= ap_const_lv64_1(32 - 1 downto 0);
        elsif (((ap_const_logic_1 = ap_CS_fsm_state12) or (ap_const_logic_1 = ap_CS_fsm_state11))) then 
            m_axi_gmem_0_AWLEN <= grp_Stream2Mem_Batch_8u_1u_Pipeline_VITIS_LOOP_153_1_fu_104_m_axi_gmem_0_AWLEN;
        else 
            m_axi_gmem_0_AWLEN <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end if; 
    end process;


    m_axi_gmem_0_AWLOCK_assign_proc : process(grp_Stream2Mem_Batch_8u_1u_Pipeline_VITIS_LOOP_153_1_fu_104_m_axi_gmem_0_AWLOCK, ap_CS_fsm_state11, ap_CS_fsm_state12)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state12) or (ap_const_logic_1 = ap_CS_fsm_state11))) then 
            m_axi_gmem_0_AWLOCK <= grp_Stream2Mem_Batch_8u_1u_Pipeline_VITIS_LOOP_153_1_fu_104_m_axi_gmem_0_AWLOCK;
        else 
            m_axi_gmem_0_AWLOCK <= ap_const_lv2_0;
        end if; 
    end process;


    m_axi_gmem_0_AWPROT_assign_proc : process(grp_Stream2Mem_Batch_8u_1u_Pipeline_VITIS_LOOP_153_1_fu_104_m_axi_gmem_0_AWPROT, ap_CS_fsm_state11, ap_CS_fsm_state12)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state12) or (ap_const_logic_1 = ap_CS_fsm_state11))) then 
            m_axi_gmem_0_AWPROT <= grp_Stream2Mem_Batch_8u_1u_Pipeline_VITIS_LOOP_153_1_fu_104_m_axi_gmem_0_AWPROT;
        else 
            m_axi_gmem_0_AWPROT <= ap_const_lv3_0;
        end if; 
    end process;


    m_axi_gmem_0_AWQOS_assign_proc : process(grp_Stream2Mem_Batch_8u_1u_Pipeline_VITIS_LOOP_153_1_fu_104_m_axi_gmem_0_AWQOS, ap_CS_fsm_state11, ap_CS_fsm_state12)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state12) or (ap_const_logic_1 = ap_CS_fsm_state11))) then 
            m_axi_gmem_0_AWQOS <= grp_Stream2Mem_Batch_8u_1u_Pipeline_VITIS_LOOP_153_1_fu_104_m_axi_gmem_0_AWQOS;
        else 
            m_axi_gmem_0_AWQOS <= ap_const_lv4_0;
        end if; 
    end process;


    m_axi_gmem_0_AWREGION_assign_proc : process(grp_Stream2Mem_Batch_8u_1u_Pipeline_VITIS_LOOP_153_1_fu_104_m_axi_gmem_0_AWREGION, ap_CS_fsm_state11, ap_CS_fsm_state12)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state12) or (ap_const_logic_1 = ap_CS_fsm_state11))) then 
            m_axi_gmem_0_AWREGION <= grp_Stream2Mem_Batch_8u_1u_Pipeline_VITIS_LOOP_153_1_fu_104_m_axi_gmem_0_AWREGION;
        else 
            m_axi_gmem_0_AWREGION <= ap_const_lv4_0;
        end if; 
    end process;


    m_axi_gmem_0_AWSIZE_assign_proc : process(grp_Stream2Mem_Batch_8u_1u_Pipeline_VITIS_LOOP_153_1_fu_104_m_axi_gmem_0_AWSIZE, ap_CS_fsm_state11, ap_CS_fsm_state12)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state12) or (ap_const_logic_1 = ap_CS_fsm_state11))) then 
            m_axi_gmem_0_AWSIZE <= grp_Stream2Mem_Batch_8u_1u_Pipeline_VITIS_LOOP_153_1_fu_104_m_axi_gmem_0_AWSIZE;
        else 
            m_axi_gmem_0_AWSIZE <= ap_const_lv3_0;
        end if; 
    end process;


    m_axi_gmem_0_AWUSER_assign_proc : process(grp_Stream2Mem_Batch_8u_1u_Pipeline_VITIS_LOOP_153_1_fu_104_m_axi_gmem_0_AWUSER, ap_CS_fsm_state11, ap_CS_fsm_state12)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state12) or (ap_const_logic_1 = ap_CS_fsm_state11))) then 
            m_axi_gmem_0_AWUSER <= grp_Stream2Mem_Batch_8u_1u_Pipeline_VITIS_LOOP_153_1_fu_104_m_axi_gmem_0_AWUSER;
        else 
            m_axi_gmem_0_AWUSER <= ap_const_lv1_0;
        end if; 
    end process;


    m_axi_gmem_0_AWVALID_assign_proc : process(m_axi_gmem_0_AWREADY, ap_CS_fsm_state3, ap_CS_fsm_state10, grp_Stream2Mem_Batch_8u_1u_Pipeline_VITIS_LOOP_153_1_fu_104_m_axi_gmem_0_AWVALID, ap_CS_fsm_state11, ap_CS_fsm_state12, in0_V_TVALID_int_regslice)
    begin
        if (((not(((m_axi_gmem_0_AWREADY = ap_const_logic_0) or (in0_V_TVALID_int_regslice = ap_const_logic_0))) and (ap_const_logic_1 = ap_CS_fsm_state3)) or ((m_axi_gmem_0_AWREADY = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state10)))) then 
            m_axi_gmem_0_AWVALID <= ap_const_logic_1;
        elsif (((ap_const_logic_1 = ap_CS_fsm_state12) or (ap_const_logic_1 = ap_CS_fsm_state11))) then 
            m_axi_gmem_0_AWVALID <= grp_Stream2Mem_Batch_8u_1u_Pipeline_VITIS_LOOP_153_1_fu_104_m_axi_gmem_0_AWVALID;
        else 
            m_axi_gmem_0_AWVALID <= ap_const_logic_0;
        end if; 
    end process;


    m_axi_gmem_0_BREADY_assign_proc : process(m_axi_gmem_0_BVALID, ap_CS_fsm_state17, icmp_ln189_reg_203, ap_CS_fsm_state9, grp_Stream2Mem_Batch_8u_1u_Pipeline_VITIS_LOOP_153_1_fu_104_m_axi_gmem_0_BREADY, ap_CS_fsm_state11, ap_CS_fsm_state12, ap_block_state17)
    begin
        if ((((m_axi_gmem_0_BVALID = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state9)) or ((ap_const_logic_1 = ap_CS_fsm_state17) and (ap_const_boolean_0 = ap_block_state17) and (icmp_ln189_reg_203 = ap_const_lv1_1)))) then 
            m_axi_gmem_0_BREADY <= ap_const_logic_1;
        elsif (((ap_const_logic_1 = ap_CS_fsm_state12) or (ap_const_logic_1 = ap_CS_fsm_state11))) then 
            m_axi_gmem_0_BREADY <= grp_Stream2Mem_Batch_8u_1u_Pipeline_VITIS_LOOP_153_1_fu_104_m_axi_gmem_0_BREADY;
        else 
            m_axi_gmem_0_BREADY <= ap_const_logic_0;
        end if; 
    end process;

    m_axi_gmem_0_RREADY <= ap_const_logic_0;

    m_axi_gmem_0_WDATA_assign_proc : process(ap_CS_fsm_state4, in0_V_read_reg_213, grp_Stream2Mem_Batch_8u_1u_Pipeline_VITIS_LOOP_153_1_fu_104_m_axi_gmem_0_WDATA, ap_CS_fsm_state11, ap_CS_fsm_state12)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state4)) then 
            m_axi_gmem_0_WDATA <= in0_V_read_reg_213;
        elsif (((ap_const_logic_1 = ap_CS_fsm_state12) or (ap_const_logic_1 = ap_CS_fsm_state11))) then 
            m_axi_gmem_0_WDATA <= grp_Stream2Mem_Batch_8u_1u_Pipeline_VITIS_LOOP_153_1_fu_104_m_axi_gmem_0_WDATA;
        else 
            m_axi_gmem_0_WDATA <= "XXXXXXXX";
        end if; 
    end process;


    m_axi_gmem_0_WID_assign_proc : process(grp_Stream2Mem_Batch_8u_1u_Pipeline_VITIS_LOOP_153_1_fu_104_m_axi_gmem_0_WID, ap_CS_fsm_state11, ap_CS_fsm_state12)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state12) or (ap_const_logic_1 = ap_CS_fsm_state11))) then 
            m_axi_gmem_0_WID <= grp_Stream2Mem_Batch_8u_1u_Pipeline_VITIS_LOOP_153_1_fu_104_m_axi_gmem_0_WID;
        else 
            m_axi_gmem_0_WID <= ap_const_lv1_0;
        end if; 
    end process;


    m_axi_gmem_0_WLAST_assign_proc : process(grp_Stream2Mem_Batch_8u_1u_Pipeline_VITIS_LOOP_153_1_fu_104_m_axi_gmem_0_WLAST, ap_CS_fsm_state11, ap_CS_fsm_state12)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state12) or (ap_const_logic_1 = ap_CS_fsm_state11))) then 
            m_axi_gmem_0_WLAST <= grp_Stream2Mem_Batch_8u_1u_Pipeline_VITIS_LOOP_153_1_fu_104_m_axi_gmem_0_WLAST;
        else 
            m_axi_gmem_0_WLAST <= ap_const_logic_0;
        end if; 
    end process;


    m_axi_gmem_0_WSTRB_assign_proc : process(ap_CS_fsm_state4, grp_Stream2Mem_Batch_8u_1u_Pipeline_VITIS_LOOP_153_1_fu_104_m_axi_gmem_0_WSTRB, ap_CS_fsm_state11, ap_CS_fsm_state12)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state4)) then 
            m_axi_gmem_0_WSTRB <= ap_const_lv1_1;
        elsif (((ap_const_logic_1 = ap_CS_fsm_state12) or (ap_const_logic_1 = ap_CS_fsm_state11))) then 
            m_axi_gmem_0_WSTRB <= grp_Stream2Mem_Batch_8u_1u_Pipeline_VITIS_LOOP_153_1_fu_104_m_axi_gmem_0_WSTRB;
        else 
            m_axi_gmem_0_WSTRB <= "X";
        end if; 
    end process;


    m_axi_gmem_0_WUSER_assign_proc : process(grp_Stream2Mem_Batch_8u_1u_Pipeline_VITIS_LOOP_153_1_fu_104_m_axi_gmem_0_WUSER, ap_CS_fsm_state11, ap_CS_fsm_state12)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state12) or (ap_const_logic_1 = ap_CS_fsm_state11))) then 
            m_axi_gmem_0_WUSER <= grp_Stream2Mem_Batch_8u_1u_Pipeline_VITIS_LOOP_153_1_fu_104_m_axi_gmem_0_WUSER;
        else 
            m_axi_gmem_0_WUSER <= ap_const_lv1_0;
        end if; 
    end process;


    m_axi_gmem_0_WVALID_assign_proc : process(m_axi_gmem_0_WREADY, ap_CS_fsm_state4, grp_Stream2Mem_Batch_8u_1u_Pipeline_VITIS_LOOP_153_1_fu_104_m_axi_gmem_0_WVALID, ap_CS_fsm_state11, ap_CS_fsm_state12)
    begin
        if (((m_axi_gmem_0_WREADY = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state4))) then 
            m_axi_gmem_0_WVALID <= ap_const_logic_1;
        elsif (((ap_const_logic_1 = ap_CS_fsm_state12) or (ap_const_logic_1 = ap_CS_fsm_state11))) then 
            m_axi_gmem_0_WVALID <= grp_Stream2Mem_Batch_8u_1u_Pipeline_VITIS_LOOP_153_1_fu_104_m_axi_gmem_0_WVALID;
        else 
            m_axi_gmem_0_WVALID <= ap_const_logic_0;
        end if; 
    end process;

    out_1_fu_150_p2 <= std_logic_vector(unsigned(zext_ln191_fu_146_p1) + unsigned(out_read_reg_190));
    rep_3_fu_166_p2 <= std_logic_vector(unsigned(rep_fu_58) + unsigned(ap_const_lv32_10));
    rep_4_fu_155_p2 <= std_logic_vector(unsigned(rep_fu_58) + unsigned(ap_const_lv32_1));
    trunc_ln184_fu_137_p1 <= rep_fu_58(4 - 1 downto 0);
    zext_ln191_fu_146_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(rep_fu_58),64));
end behav;
