<pragmas>
<pragma file="/home/emre/Documents/finn/deps/finn-hlslib/streamtools.h" line="527" pragmaType="pipeline" parentfunction="StreamingDataWidthConverter_Batch" off="0" ii="1" rewind="0" style="flp"/>
<pragma file="/home/emre/Documents/finn/deps/finn-hlslib/streamtools.h" line="547" pragmaType="pipeline" parentfunction="StreamingDataWidthConverter_Batch" off="0" ii="1" rewind="0" style="flp"/>
<pragma file="/home/emre/Documents/finn/deps/finn-hlslib/streamtools.h" line="558" pragmaType="pipeline" parentfunction="StreamingDataWidthConverter_Batch" off="0" ii="1" rewind="0" style="flp"/>
<pragma file="" line="0" pragmaType="inline" parentfunction="checkOverflowCsim" off="0" region="0" recursive="0"/>
<pragma file="" line="0" pragmaType="inline" parentfunction="checkOverflowBaseC" off="0" region="0" recursive="0"/>
<pragma file="" line="0" pragmaType="inline" parentfunction="ap_range_ref<8, false>::ap_range_ref(ap_int_base<8, false>*, int, int)" off="0" region="0" recursive="0"/>
<pragma file="" line="0" pragmaType="inline" parentfunction="ap_int_base<8, false>::ap_int_base(int)" off="0" region="0" recursive="0"/>
<pragma file="" line="0" pragmaType="inline" parentfunction="ap_uint<8>::ap_uint<8, false>(ap_int_base<8, false> const&)" off="0" region="0" recursive="0"/>
<pragma file="" line="0" pragmaType="inline" parentfunction="ap_int_base<8, false>::ap_int_base<64, false>(ap_int_base<64, false> const&)" off="0" region="0" recursive="0"/>
<pragma file="/opt/Xilinx/Vitis/2024.2/common/technology/autopilot/etc/ap_common.h" line="523" pragmaType="inline" parentfunction="ssdm_int<8, false>::ssdm_int(unsigned char)" off="0" region="0" recursive="0"/>
<pragma file="" line="0" pragmaType="inline" parentfunction="ap_int_base<8, false>::RType<8, false>::arg1 operator>><8, false>(ap_int_base<8, false> const&, unsigned int)" off="0" region="0" recursive="0"/>
<pragma file="" line="0" pragmaType="inline" parentfunction="ap_int_base<8, false>::operator()(int, int)" off="0" region="0" recursive="0"/>
<pragma file="" line="0" pragmaType="inline" parentfunction="checkOverflowBaseC" off="0" region="0" recursive="0"/>
<pragma file="" line="0" pragmaType="inline" parentfunction="range" off="0" region="0" recursive="0"/>
<pragma file="" line="0" pragmaType="inline" parentfunction="ap_int_base<64, false>::RType<64, false>::arg1 operator>><64, false>(ap_int_base<64, false> const&, unsigned int)" off="0" region="0" recursive="0"/>
<pragma file="" line="0" pragmaType="inline" parentfunction="ap_uint<8>::ap_uint<64>(ap_uint<64> const&)" off="0" region="0" recursive="0"/>
<pragma file="" line="0" pragmaType="inline" parentfunction="ap_uint<8>::ap_uint(int)" off="0" region="0" recursive="0"/>
<pragma file="" line="0" pragmaType="inline" parentfunction="ap_int_base<64, false>::ap_int_base(int)" off="0" region="0" recursive="0"/>
<pragma file="" line="0" pragmaType="inline" parentfunction="ap_uint<64>::ap_uint<64, false>(ap_int_base<64, false> const&)" off="0" region="0" recursive="0"/>
<pragma file="/opt/Xilinx/Vitis/2024.2/common/technology/autopilot/etc/ap_common.h" line="523" pragmaType="inline" parentfunction="ssdm_int<64, false>::ssdm_int(unsigned long)" off="0" region="0" recursive="0"/>
<pragma file="" line="0" pragmaType="inline" parentfunction="ap_uint<8>::ap_uint<64, false>(ap_range_ref<64, false> const&)" off="0" region="0" recursive="0"/>
<pragma file="" line="0" pragmaType="inline" parentfunction="write" off="0" region="0" recursive="0"/>
<pragma file="" line="0" pragmaType="inline" parentfunction="ap_uint<64>::ap_uint(int)" off="0" region="0" recursive="0"/>
<pragma file="" line="0" pragmaType="inline" parentfunction="read" off="0" region="0" recursive="0"/>
<pragma file="" line="0" pragmaType="inline" parentfunction="ap_int_base<64, false>::operator()(int, int)" off="0" region="0" recursive="0"/>
<pragma file="top_StreamingDataflowPartition_0_IODMA_hls_0.cpp" line="22" pragmaType="dataflow" parentfunction="StreamingDataflowPartition_0_IODMA_hls_0" disable_start_propagation="0"/>
<pragma file="top_StreamingDataflowPartition_0_IODMA_hls_0.cpp" line="17" pragmaType="interface" parentfunction="StreamingDataflowPartition_0_IODMA_hls_0" mode="s_axilite" port="numReps" bundle="control" offset="-1" name="" clock="" impl="" register="0"/>
<pragma file="top_StreamingDataflowPartition_0_IODMA_hls_0.cpp" line="18" pragmaType="interface" parentfunction="StreamingDataflowPartition_0_IODMA_hls_0" mode="s_axilite" port="" bundle="control" offset="-1" name="" clock="" impl="" register="0"/>
<pragma file="top_StreamingDataflowPartition_0_IODMA_hls_0.cpp" line="19" pragmaType="interface" parentfunction="StreamingDataflowPartition_0_IODMA_hls_0" mode="m_axi" port="in0_V" bundle="" offset="slave" name="" depth="-1" num_read_outstanding="-1" num_write_outstanding="-1" max_burst_read_length="-1" max_burst_write_length="-1" latency="-1" max_widen_bitwidth="-1" channel=""/>
<pragma file="top_StreamingDataflowPartition_0_IODMA_hls_0.cpp" line="20" pragmaType="interface" parentfunction="StreamingDataflowPartition_0_IODMA_hls_0" mode="s_axilite" port="in0_V" bundle="control" offset="-1" name="" clock="" impl="" register="0"/>
<pragma file="top_StreamingDataflowPartition_0_IODMA_hls_0.cpp" line="21" pragmaType="interface" parentfunction="StreamingDataflowPartition_0_IODMA_hls_0" mode="axis" port="out_V" register="1" register_mode="both" name="" depth="-1"/>
<pragma file="/home/emre/Documents/finn/deps/finn-hlslib/dma.h" line="141" pragmaType="pipeline" parentfunction="Mem2Stream" off="0" ii="1" rewind="0" style="flp"/>
<pragma file="/home/emre/Documents/finn/deps/finn-hlslib/dma.h" line="141" pragmaType="pipeline" parentfunction="Mem2Stream" off="0" ii="1" rewind="0" style="flp"/>
<pragma file="" line="0" pragmaType="inline" parentfunction="write" off="0" region="0" recursive="0"/>
<pragma file="" line="0" pragmaType="inline" parentfunction="read" off="0" region="0" recursive="0"/>
<pragma file="" line="0" pragmaType="inline" parentfunction="ap_range_ref<8, false>& ap_range_ref<8, false>::operator=<64, false>(ap_int_base<64, false> const&)" off="0" region="0" recursive="0"/>
<pragma file="" line="0" pragmaType="inline" parentfunction="range" off="0" region="0" recursive="0"/>
<pragma file="" line="0" pragmaType="inline" parentfunction="ap_range_ref<64, false>::ap_range_ref(ap_int_base<64, false>*, int, int)" off="0" region="0" recursive="0"/>
<pragma file="" line="0" pragmaType="inline" parentfunction="ap_int_base<8, false>::ap_int_base<64, false>(ap_range_ref<64, false> const&)" off="0" region="0" recursive="0"/>
<pragma file="" line="0" pragmaType="inline" parentfunction="get" off="0" region="0" recursive="0"/>
<pragma file="" line="0" pragmaType="inline" parentfunction="hls::stream<ap_uint<64>, 0>::stream()" off="0" region="0" recursive="0"/>
</pragmas>
